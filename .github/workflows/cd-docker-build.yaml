---
  name: Build and Push Docker Images
  run-name: Docker Build v${{ github.event.client_payload.version || github.event.inputs.version }}

  on:
    repository_dispatch:
      types: [start-docker-build]

    workflow_dispatch:
      inputs:
        version:
          description: 'Version to build'
          required: true
          type: string
        actor:
          description: 'Actor who triggered the build'
          required: false
          default: ''
          type: string
        build_arm:
          description: 'Build ARM64 architecture'
          required: false
          default: false
          type: boolean

  permissions:
    contents: read
    packages: write
    id-token: write

  jobs:
    setup:
      name: Docker Build Setup
      runs-on: ubuntu-latest
      outputs:
        repo_owner: ${{ steps.repo_owner.outputs.lowercase }}
        version: ${{ steps.version.outputs.value }}

      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Set repository owner lowercase
          id: repo_owner
          run: |
            LOWERCASE_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
            echo "lowercase=$LOWERCASE_OWNER" >> $GITHUB_OUTPUT
            echo "Using lowercase owner: $LOWERCASE_OWNER"

        - name: Debug repository and image paths
          run: |
            echo "Repository owner: ${{ github.repository_owner }}"
            echo "Lowercase owner: $(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')"
            echo "Repository name: ${{ github.repository }}"
            echo "Image path will be: ghcr.io/$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')/<component>:<version>"
            echo "Summary path shows: ghcr.io/$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')/web3-apps/<component>:<version>"
            echo "Expected in release: ghcr.io/$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')/web3-message-board/<component>:<version>"

        - name: Set version
          id: version
          run: |
            VERSION="${{ github.event.client_payload.version || github.event.inputs.version }}"
            echo "value=$VERSION" >> $GITHUB_OUTPUT
            echo "Using version: $VERSION"


    build:
      name: Build Docker Images
      needs: setup
      runs-on: ubuntu-latest
      strategy:
        matrix:
          component: [api, frontend]
        fail-fast: false

      steps:
        - name: Checkout code
          uses: actions/checkout@v4
          with:
            fetch-depth: 0

        - name: Set up QEMU
          if: ${{ github.event.client_payload.build_arm == true || github.event.inputs.build_arm == true }}
          uses: docker/setup-qemu-action@v3
          with:
            platforms: arm64

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3

        - name: Login to GitHub Container Registry
          uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

        - name: Debug Docker tags
          run: |
            echo "Building Docker images with the following tags:"
            echo "Tag 1: ghcr.io/${{ needs.setup.outputs.repo_owner }}/web3-message-board/${{ matrix.component }}:${{ needs.setup.outputs.version }}"
            echo "Tag 2: ghcr.io/${{ needs.setup.outputs.repo_owner }}/web3-message-board/${{ matrix.component }}:latest"
            echo "These now include web3-message-board in the path"

            # Show the actual tags that will be referenced later
            echo "In summary and artifacts: ghcr.io/${{ needs.setup.outputs.repo_owner }}/web3-message-board/${{ matrix.component }}:${{ needs.setup.outputs.version }}"
            echo "In release automation: ghcr.io/${{ needs.setup.outputs.repo_owner }}/web3-message-board/${{ matrix.component }}:${{ needs.setup.outputs.version }}"
            echo "Paths should now be consistent"

        - name: Build and push multi-platform image
          uses: docker/build-push-action@v5
          with:
            context: ./${{ matrix.component }}
            platforms: ${{ (github.event.client_payload.build_arm == true || github.event.inputs.build_arm == true) && 'linux/amd64,linux/arm64' || 'linux/amd64' }}
            push: true
            tags: |
              ghcr.io/${{ needs.setup.outputs.repo_owner }}/web3-message-board/${{ matrix.component }}:${{ needs.setup.outputs.version }}
              ghcr.io/${{ needs.setup.outputs.repo_owner }}/web3-message-board/${{ matrix.component }}:latest
            provenance: false
            cache-from: type=gha
            cache-to: type=gha,mode=max

        - name: Generate build summary
          run: |
            {
              echo "## 🐳 ${{ matrix.component }} Build Summary"
              echo "### 📋 Build Information"
              echo "| Property | Value |"
              echo "| --- | --- |"
              echo "| 🏷️ **Version** | v${{ needs.setup.outputs.version }} |"
              echo "| 👤 **Built by** | @${{ github.event.client_payload.actor || github.event.inputs.actor || github.actor }} |"
              echo "| 🕒 **Build Date** | $(date) |"

              if [[ "${{ github.event.client_payload.build_arm || github.event.inputs.build_arm }}" == "true" ]]; then
                echo "| 🏗️ **Platforms** | linux/amd64, linux/arm64 |"
              else
                echo "| 🏗️ **Platforms** | linux/amd64 |"
              fi

              echo "### 📦 Image"
              echo "\`ghcr.io/${{ needs.setup.outputs.repo_owner }}/web3-message-board/${{ matrix.component }}:${{ needs.setup.outputs.version }}\`"

              echo "### 📝 Usage"
              echo '```bash'
              echo "docker pull ghcr.io/${{ needs.setup.outputs.repo_owner }}/web3-message-board/${{ matrix.component }}:${{ needs.setup.outputs.version }}"
              echo '```'
            } >> "$GITHUB_STEP_SUMMARY"

            # Add version to build log for easier tracking
            echo "::notice::Docker build for ${{ matrix.component }} version ${{ needs.setup.outputs.version }} completed successfully"
            echo "BUILD_VERSION=${{ needs.setup.outputs.version }}" >> $GITHUB_STEP_SUMMARY

        - name: Create artifact with image information
          run: |
            # Create a directory for the artifacts
            mkdir -p docker-artifacts/${{ matrix.component }}

            # Get the correct image path
            IMAGE_PATH="ghcr.io/${{ needs.setup.outputs.repo_owner }}/web3-message-board/${{ matrix.component }}:${{ needs.setup.outputs.version }}"

            # Create a manifest file with image information
            cat > docker-artifacts/${{ matrix.component }}/image-info.txt <<EOF
            Docker Image: ${IMAGE_PATH}
            Built: $(date)
            Platforms: ${{ (github.event.client_payload.build_arm == true || github.event.inputs.build_arm == true) && 'linux/amd64,linux/arm64' || 'linux/amd64' }}
            Builder: ${{ github.event.client_payload.actor || github.event.inputs.actor || github.actor }}
            EOF

            # Create a simple script to pull the image
            cat > docker-artifacts/${{ matrix.component }}/pull-image.sh <<EOF
            #!/bin/bash
            docker pull ${IMAGE_PATH}
            EOF
            chmod +x docker-artifacts/${{ matrix.component }}/pull-image.sh

            # Create a build completion marker with version
            echo "${{ needs.setup.outputs.version }}" > docker-artifacts/${{ matrix.component }}/build-complete.marker

            # Log the completion for easier tracking in the build logs
            echo "Created completion marker for ${{ matrix.component }} version ${{ needs.setup.outputs.version }}"

        - name: Upload Docker image artifacts
          uses: actions/upload-artifact@v4
          with:
            name: docker-build-${{ matrix.component }}
            path: docker-artifacts/${{ matrix.component }}/
            retention-days: 1
