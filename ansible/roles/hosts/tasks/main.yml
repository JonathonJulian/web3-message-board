---
# tasks file for hosts role

- name: Get current kubectl context
  ansible.builtin.command: kubectl config current-context
  register: kubectl_context
  changed_when: false
  delegate_to: localhost
  become: false
  ignore_errors: true
  tags: ['hosts', 'kubernetes']

- name: Initialize an empty hostnames dictionary
  ansible.builtin.set_fact:
    host_ips: {}
  tags: ['hosts']

# Simple approach: one task to extract all hosts from ingress resources
- name: Get and process ingress resources
  block:
    - name: Process each hostname from all ingress resources
      ansible.builtin.set_fact:
        host_ips: "{{ host_ips | combine({item.1.hostname: ingress_ip}) }}"
      vars:
        ingress_info: "{{ ingress_resources.results | selectattr('item.name', 'equalto', item.0.name) | first }}"
        ingress_ip: >-
          {% if ingress_info.resources is defined and ingress_info.resources | length > 0 and
             ingress_info.resources[0].status is defined and
             ingress_info.resources[0].status.loadBalancer is defined and
             ingress_info.resources[0].status.loadBalancer.ingress is defined and
             ingress_info.resources[0].status.loadBalancer.ingress | length > 0 and
             ingress_info.resources[0].status.loadBalancer.ingress[0].ip is defined %}
          {{ ingress_info.resources[0].status.loadBalancer.ingress[0].ip }}
          {% else %}
          {{ k8s_ingress.default_ip }}
          {% endif %}
      with_subelements:
        - "{{ k8s_ingress.resources }}"
        - hosts
      tags: ['hosts']
  when: k8s_ingress is defined and k8s_ingress.resources is defined
  tags: ['hosts']

- name: Get information for each ingress resource
  kubernetes.core.k8s_info:
    api_version: networking.k8s.io/v1
    kind: Ingress
    name: "{{ item.name }}"
    namespace: "{{ k8s_ingress.namespace }}"
  register: ingress_resources
  delegate_to: localhost
  become: false
  ignore_errors: true
  loop: "{{ k8s_ingress.resources | default([]) }}"
  loop_control:
    label: "{{ item.name }}"
  tags: ['hosts', 'kubernetes']

- name: Remove existing entries from /etc/hosts
  ansible.builtin.lineinfile:
    path: /etc/hosts
    regexp: "{{ item.key }}"
    state: absent
  with_dict: "{{ host_ips }}"
  tags: ['hosts']

- name: Add entries to /etc/hosts
  ansible.builtin.lineinfile:
    path: /etc/hosts
    line: "{{ item.value }} {{ item.key }}"
    state: present
  with_dict: "{{ host_ips }}"
  tags: ['hosts']

- name: Display hosts file for verification
  ansible.builtin.command: cat /etc/hosts
  register: hosts_file
  changed_when: false
  tags: ['hosts']

- name: Show hosts file
  ansible.builtin.debug:
    var: hosts_file.stdout_lines
  tags: ['hosts']

- name: Display configured hosts entries
  ansible.builtin.debug:
    msg: "Added hosts entries: {{ host_ips | to_nice_yaml }}"
  tags: ['hosts']
